spring:
  application:
    name: ec2-docker-api
  
  # Database Configuration
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect
  
  # Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 600000  # 10 minutes
      cache-null-values: false
    cache-names:
      - instances
      - instancesList
      - operations

# Async Configuration
async:
  task:
    execution:
      pool:
        core-size: 5
        max-size: 20
        queue-capacity: 100
        keep-alive: 60s
      thread-name-prefix: async-task-

# Docker Configuration
docker:
  host: unix:///var/run/docker.sock
  tls-verify: false
  cert-path: ""

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,cache
  endpoint:
    health:
      show-details: always

# Logging Configuration
logging:
  level:
    com.example: DEBUG
    org.springframework.cache: DEBUG
    org.springframework.scheduling: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Cleanup Configuration
cleanup:
  terminated-instances:
    enabled: true
    interval: 300000  # 5 minutes
  completed-operations:
    enabled: true
    interval: 600000  # 10 minutes
    retention-days: 7