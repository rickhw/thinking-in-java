plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1'
sourceCompatibility = '17'

def buildId = new Date().format("yyyyMMdd-HHmm")
def buildType = project.hasProperty('buildType') ? project.property('buildType') : 'dev'

// Git hash 取得（可選）
def gitHash = 'unknown'
try {
    def proc = 'git rev-parse --short HEAD'.execute()
    proc.in.eachLine { line -> gitHash = line.trim() }
} catch (ignored) {}

def replacements = [
    BUILD_ID  : buildId,
    BUILD_TYPE: buildType,
    HASH_CODE : gitHash,
    BUILD_SDK : System.getProperty("java.version")
]

processResources {
    filesMatching(['**/*.properties', '**/*.txt']) {
        filteringCharset = 'UTF-8'
        filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: replacements)
    }
}

bootJar {
    archiveBaseName.set(project.name)
    archiveVersion.set("${version}-${buildType}-${buildId}")
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.projectlombok:lombok:1.18.36'
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

}
